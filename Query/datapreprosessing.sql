-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.reviews_dataset
(
    review_id text,
    order_id text,
    review_score numeric,
    review_comment_title text,
    review_comment_message text,
    review_creation_date timestamp with time zone,
    review_answer_timestamp timestamp with time zone
);

CREATE TABLE IF NOT EXISTS public.product_dataset
(
    product_id text,
    product_category_name text,
    product_name_lenght numeric,
    product_description_lenght numeric,
    product_photos_qty numeric,
    product_weight_g numeric,
    product_length_cm numeric,
    product_height_cm numeric,
    product_width_cm numeric
);

CREATE TABLE IF NOT EXISTS public.payments_dataset
(
    order_id text,
    payment_sequential numeric,
    payment_type text,
    payment_installments numeric,
    payment_value double precision
);

CREATE TABLE IF NOT EXISTS public.orders_dataset
(
    order_id text,
    customer_id text,
    order_status text,
    order_purchase_timestamp timestamp with time zone,
    order_approved_at timestamp with time zone,
    order_delivered_carrier_date timestamp with time zone,
    order_delivered_customer_date timestamp with time zone,
    order_estimated_delivery_date timestamp with time zone
);

CREATE TABLE IF NOT EXISTS public.order_items_dataset
(
    order_id text,
    order_item_id text,
    product_id text,
    seller_id text,
    shipping_limit_date timestamp with time zone,
    price double precision,
    freight_value double precision
);

CREATE TABLE IF NOT EXISTS public.sellers_dataset
(
    seller_id text,
    seller_zip_code_prefix character varying,
    seller_city text,
    seller_state text
);

CREATE TABLE IF NOT EXISTS public.geolocations_dataset
(
    geolocation_zip_code_prefix character varying,
    geolocation_lat numeric,
    geolocation_lng numeric,
    geolocation_city text,
    geolocation_state text
);

CREATE TABLE IF NOT EXISTS public.customers_dataset
(
    customer_id text,
    customer_unique_id text,
    customer_zip_code_prefix character varying,
    customer_city text,
    customer_state text
);

ALTER TABLE IF EXISTS public.product_dataset
    ADD CONSTRAINT order_item FOREIGN KEY (product_id)
    REFERENCES public.order_items_dataset (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders_dataset
    ADD CONSTRAINT review FOREIGN KEY (order_id)
    REFERENCES public.reviews_dataset (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders_dataset
    ADD CONSTRAINT payments FOREIGN KEY (order_id)
    REFERENCES public.payments_dataset (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.orders_dataset
    ADD CONSTRAINT order_item FOREIGN KEY (order_id)
    REFERENCES public.order_items_dataset (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sellers_dataset
    ADD CONSTRAINT seller FOREIGN KEY (seller_id)
    REFERENCES public.order_items_dataset (seller_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.geolocations_dataset
    ADD CONSTRAINT "zip code" FOREIGN KEY (geolocation_zip_code_prefix)
    REFERENCES public.sellers_dataset (seller_zip_code_prefix) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.geolocations_dataset
    ADD CONSTRAINT "zip code customer" FOREIGN KEY (geolocation_zip_code_prefix)
    REFERENCES public.customers_dataset (customer_zip_code_prefix) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.customers_dataset
    ADD CONSTRAINT customer FOREIGN KEY (customer_id)
    REFERENCES public.orders_dataset (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;